To access API methods, you must be authenticated. The authenticatetion is based on [JWT technology](http://jwt.io).

## Control access [/auth]

### Authenticate [POST]

For auth, send the `username` and the `password` as a json object. In this
current version, exists only a `username`: `pedal pi`

```json
{
  "username": "pedal pi",
  "password": "pedal pi",
}
```

::: warning
The initial password is `pedal pi`. ~Please, on the first login, change
the password~ (in development)!
:::

If the data is correct, will be returned the **auth token**.
You need send it in every request. See a example in the [next section](#authentication-auth-token).

::: warning
The token has a expiration of **7 days** from login response time. If the token has
expired, is necessary request auth to obtains a new token.
:::

+ Request  (application/json; charset=UTF-8)

    + Body

            {
              "username": "pedal pi",
              "password": "pedal pi",
            }

+ Response 200 (application/json; charset=UTF-8)
    + Body

            {"token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MjE5ODM1NDZ9.MKT1XRgqa68ADIdH1ro0MkIWwh9mXrNPjz5q5aUhFKc"}

+ Response 401 (application/json; charset=UTF-8)
    + Body

            {"error": "Invalid username or password"}

## How to use auth token [/something]

In the requests, is necessary send the auth token in the header with the following stard:

```
Authorization: bearer <token>
```

### Example request [GET]

::: note
The Authorization code error is `401`.

See the possible errors in right selecting a request.
:::

+ Request successful (application/json; charset=UTF-8)
    + Headers

            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MjE5ODM1NDZ9.MKT1XRgqa68ADIdH1ro0MkIWwh9mXrNPjz5q5aUhFKc
+ Response 200 (application/json; charset=UTF-8)
    + Body

            something


+ Request without Authorization (application/json; charset=UTF-8)
+ Response 401 (application/json; charset=UTF-8)
    + Body

            {"error": "Missing authorization"}

+ Request invalid Authorization standart (application/json; charset=UTF-8)
    + Headers

            Authorization: bearer something eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MjE5ODM1NDZ9.MKT1XRgqa68ADIdH1ro0MkIWwh9mXrNPjz5q5aUhFKc
+ Response 401 (application/json; charset=UTF-8)
    + Body

            {"error": "Invalid header authorization. The Authorization header not match with the standard `Authorization: bearer <token>`"}

+ Request token with wrong signature (application/json; charset=UTF-8)
    + Headers

            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MjE5ODM1NDZ9.MKT1XRgqa68ADIdH1ro0MkIWwh9mXrNPjz5q5aUhFKc
+ Response 401 (application/json; charset=UTF-8)
    + Body

            {"error": "Signature verification failed"}

+ Request token expired (application/json; charset=UTF-8)
    + Headers

            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MjE5ODM1NDZ9.MKT1XRgqa68ADIdH1ro0MkIWwh9mXrNPjz5q5aUhFKc
+ Response 401 (application/json; charset=UTF-8)
    + Body

            {"error": "Signature has expired"}
