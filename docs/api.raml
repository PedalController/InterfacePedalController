#%RAML 1.0
title: Pedal PI - Web Service
version: v0.0.1
baseUri: /
mediaType:  application/json
description:
  Manage the Pedal Pi by REST API

/effects:
  description: Obtains all plugins effects installed data
  get:
    description: Get all plugins effects installed

/banks:
  description: Obtains all banks data persisted in Pedal Pi
  get:
    description: Get all banks

/bank:
  post:
    description:
      Post a new bank. A new bank index is returned.
      Index is "-1"

  /{bankIndex}:
    uriParameters:
      bankIndex:
        description: Bank index
        type: integer
    get:
      description: Get a bank
    put:
      description: Update a bank
    delete:
      description: Delete a bank

    /pedalboard:
      post:
        description: Post a new pedalboard
      /{pedalboardIndex}:
        uriParameters:
          pedalboardIndex:
            description: Pedalboard index
            type: integer
        get:
          description: Get a pedalboard
        put:
          description: Update a pedalboard
        delete:
          description: Remove a effect

        /effect:
          post:
            description: Post a new effect
          /{effectIndex}:
            uriParameters:
              effectIndex:
                description: Effect index
                type: integer

            get:
              description: Get an effect
            delete:
              description: Remove an effect

            /param/{paramIndex}:
              uriParameters:
                paramIndex:
                  description: Param index
                  type: integer
              get:
                description: Get a param
              put:
                description: Update the param value

/data/{key}:
  description: |
    Not implemented yet.
    Save consumer and manage data in valid json-format.
  uriParameters:
    key:
      description: Key idenfier. Util then more one application saves data in pedalboard
  get:
    description:
      Get the pedalboard data based in key sended
    responses:
      200:
        body:
          application/json:
            examples:
              Empty: {}
              Any content: {any-key: any-data}

  post:
    description:
      Saves the pedalboard data. If exists a data in key defined, will be overrided
    body:
      application/json:
        example: {any-key: any-data}

  delete:
    description:
      Removes the pedalboard data for the key defined

/current:
  description: Manage the current pedalboard
  get:
    description: Get the current bank index and the current pedalboard index
  /data:
    get:
      description: Get the current bank data and the current pedalboard index

  /bank/{bankIndex}/pedalboard/{pedalboardIndex}:
    uriParameters:
      bankIndex:
        type: integer
      pedalboardIndex:
        type: integer
    put:
      description: Put the current bankIndex and the current pedalboardIndex

  /effect/{effectIndex}:
    uriParameters:
      effectIndex:
        type: integer
    put:
      description: Put for toggle effect status (active for bypassed or bypassed for active) of the current pedalboard

    /param/{paramIndex}:
      uriParameters:
        paramIndex:
          type: integer
      put:
        description: Put for set a parameter value for a effect of the current pedalboard

/swap:
  description: Deprecated

/connections:
  description: Not implemented yet

/peripheral:
  description: Not implemented yet
